{"ast":null,"code":"import _slicedToArray from \"C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nvar defaultOptionStringifier = function defaultOptionStringifier(option) {\n  var label = option.label,\n      value = option.value;\n\n  if (typeof label === 'string') {\n    return label;\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  } // Fall back string representation\n\n\n  return String(option);\n};\n\nfunction useSelect(props) {\n  var buttonComponent = props.buttonComponent,\n      buttonRefProp = props.buttonRef,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      listboxId = props.listboxId,\n      listboxRefProp = props.listboxRef,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _onChange = props.onChange,\n      onOpenChange = props.onOpenChange,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      options = props.options,\n      _props$optionStringif = props.optionStringifier,\n      optionStringifier = _props$optionStringif === void 0 ? defaultOptionStringifier : _props$optionStringif,\n      valueProp = props.value;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1]; // prevents closing the listbox on keyUp right after opening it\n\n\n  var ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  var ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      listboxFocusRequested = _React$useState2[0],\n      requestListboxFocus = _React$useState2[1];\n\n  var focusListboxIfRequested = React.useCallback(function () {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  var updateListboxRef = function updateListboxRef(listboxElement) {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  var handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(function () {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(function () {\n    requestListboxFocus(open);\n  }, [open]);\n\n  var createHandleMouseDown = function createHandleMouseDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onMous;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && open) {\n        ignoreClick.current = true;\n      }\n    };\n  };\n\n  var createHandleButtonClick = function createHandleButtonClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n      if (!event.defaultPrevented && !ignoreClick.current) {\n        onOpenChange == null ? void 0 : onOpenChange(!open);\n      }\n\n      ignoreClick.current = false;\n    };\n  };\n\n  var createHandleButtonKeyDown = function createHandleButtonKeyDown(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyD;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (event.key === 'Enter') {\n        ignoreEnterKeyUp.current = true;\n      }\n\n      if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        onOpenChange == null ? void 0 : onOpenChange(true);\n      }\n    };\n  };\n\n  var createHandleListboxKeyUp = function createHandleListboxKeyUp(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onKeyU;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      var closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n      if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n        var _buttonRef$current;\n\n        buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n      }\n\n      ignoreEnterKeyUp.current = false;\n    };\n  };\n\n  var createHandleListboxItemClick = function createHandleListboxItemClick(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$onClic2;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if (!multiple) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var createHandleListboxBlur = function createHandleListboxBlur(otherHandlers) {\n    return function (event) {\n      var _otherHandlers$blur;\n\n      otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n      if (!event.defaultPrevented) {\n        onOpenChange == null ? void 0 : onOpenChange(false);\n      }\n    };\n  };\n\n  var listboxReducer = function listboxReducer(state, action) {\n    var newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  var _useButton = useButton({\n    component: buttonComponent,\n    disabled: disabled,\n    ref: handleButtonRef\n  }),\n      getButtonRootProps = _useButton.getRootProps,\n      buttonActive = _useButton.active,\n      buttonFocusVisible = _useButton.focusVisible;\n\n  var selectedOption = React.useMemo(function () {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(function (o) {\n      return value.includes(o.value);\n    }) : (_props$options$find = props.options.find(function (o) {\n      return o.value === value;\n    })) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  var useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: function onChange(newOptions) {\n        setValue(newOptions.map(function (o) {\n          return o.value;\n        }));\n        _onChange == null ? void 0 : _onChange(newOptions.map(function (o) {\n          return o.value;\n        }));\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: function isOptionDisabled(o) {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: function optionComparer(o, v) {\n        return (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value);\n      },\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: function onChange(option) {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        _onChange == null ? void 0 : _onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options: options,\n      optionStringifier: optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  var _useListbox = useListbox(useListboxParameters),\n      getListboxRootProps = _useListbox.getRootProps,\n      getListboxOptionProps = _useListbox.getOptionProps,\n      getOptionState = _useListbox.getOptionState,\n      highlightedOption = _useListbox.highlightedOption,\n      listboxSelectedOption = _useListbox.selectedOption;\n\n  var getButtonProps = function getButtonProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  var getListboxProps = function getListboxProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getListboxRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleListboxBlur(otherHandlers),\n      onKeyUp: createHandleListboxKeyUp(otherHandlers)\n    }));\n  };\n\n  var getOptionProps = function getOptionProps(option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    open: open,\n    highlightedOption: highlightedOption\n  });\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    disabled: disabled,\n    getButtonProps: getButtonProps,\n    getListboxProps: getListboxProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    open: open,\n    value: value\n  };\n}\n\nexport default useSelect;","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@mui/base/SelectUnstyled/useSelect.js"],"names":["_extends","React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","useButton","useListbox","defaultListboxReducer","ActionTypes","defaultOptionStringifier","option","label","value","String","useSelect","props","buttonComponent","buttonRefProp","buttonRef","defaultValue","disabled","listboxId","listboxRefProp","listboxRef","multiple","onChange","onOpenChange","open","options","optionStringifier","valueProp","useRef","handleButtonRef","intermediaryListboxRef","controlled","default","name","state","setValue","ignoreEnterKeyUp","ignoreClick","useState","listboxFocusRequested","requestListboxFocus","focusListboxIfRequested","useCallback","current","focus","updateListboxRef","listboxElement","handleListboxRef","useEffect","createHandleMouseDown","otherHandlers","event","_otherHandlers$onMous","onMouseDown","call","defaultPrevented","createHandleButtonClick","_otherHandlers$onClic","onClick","createHandleButtonKeyDown","_otherHandlers$onKeyD","onKeyDown","key","preventDefault","createHandleListboxKeyUp","_otherHandlers$onKeyU","onKeyUp","closingKeys","includes","_buttonRef$current","createHandleListboxItemClick","_otherHandlers$onClic2","createHandleListboxBlur","_otherHandlers$blur","blur","listboxReducer","action","newState","type","keyDown","selectedValue","highlightedValue","optionsChange","component","ref","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","selectedOption","useMemo","_props$options$find","filter","o","find","useListboxParameters","id","isOptionDisabled","_o$disabled","optionComparer","v","newOptions","map","_o$disabled2","_option$value","_option$value2","stateReducer","getListboxRootProps","getListboxOptionProps","getOptionProps","getOptionState","highlightedOption","listboxSelectedOption","getButtonProps","getListboxProps","onBlur","useDebugValue"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useButton } from '../ButtonUnstyled';\nimport { useListbox, defaultListboxReducer, ActionTypes } from '../ListboxUnstyled';\n\nconst defaultOptionStringifier = option => {\n  const {\n    label,\n    value\n  } = option;\n\n  if (typeof label === 'string') {\n    return label;\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  } // Fall back string representation\n\n\n  return String(option);\n};\n\nfunction useSelect(props) {\n  const {\n    buttonComponent,\n    buttonRef: buttonRefProp,\n    defaultValue,\n    disabled = false,\n    listboxId,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    onChange,\n    onOpenChange,\n    open = false,\n    options,\n    optionStringifier = defaultOptionStringifier,\n    value: valueProp\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const intermediaryListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'SelectUnstyled',\n    state: 'value'\n  }); // prevents closing the listbox on keyUp right after opening it\n\n  const ignoreEnterKeyUp = React.useRef(false); // prevents reopening the listbox when button is clicked\n  // (listbox closes on lost focus, then immediately reopens on click)\n\n  const ignoreClick = React.useRef(false); // Ensure the listbox is focused after opening\n\n  const [listboxFocusRequested, requestListboxFocus] = React.useState(false);\n  const focusListboxIfRequested = React.useCallback(() => {\n    if (listboxFocusRequested && listboxRef.current != null) {\n      listboxRef.current.focus();\n      requestListboxFocus(false);\n    }\n  }, [listboxFocusRequested]);\n\n  const updateListboxRef = listboxElement => {\n    listboxRef.current = listboxElement;\n    focusListboxIfRequested();\n  };\n\n  const handleListboxRef = useForkRef(intermediaryListboxRef, updateListboxRef);\n  React.useEffect(() => {\n    focusListboxIfRequested();\n  }, [focusListboxIfRequested]);\n  React.useEffect(() => {\n    requestListboxFocus(open);\n  }, [open]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && open) {\n      ignoreClick.current = true;\n    }\n  };\n\n  const createHandleButtonClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);\n\n    if (!event.defaultPrevented && !ignoreClick.current) {\n      onOpenChange == null ? void 0 : onOpenChange(!open);\n    }\n\n    ignoreClick.current = false;\n  };\n\n  const createHandleButtonKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      ignoreEnterKeyUp.current = true;\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n      event.preventDefault();\n      onOpenChange == null ? void 0 : onOpenChange(true);\n    }\n  };\n\n  const createHandleListboxKeyUp = otherHandlers => event => {\n    var _otherHandlers$onKeyU;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const closingKeys = multiple ? ['Escape'] : ['Escape', 'Enter', ' '];\n\n    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {\n      var _buttonRef$current;\n\n      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();\n    }\n\n    ignoreEnterKeyUp.current = false;\n  };\n\n  const createHandleListboxItemClick = otherHandlers => event => {\n    var _otherHandlers$onClic2;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (!multiple) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const createHandleListboxBlur = otherHandlers => event => {\n    var _otherHandlers$blur;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$blur = otherHandlers.blur) == null ? void 0 : _otherHandlers$blur.call(otherHandlers, event);\n\n    if (!event.defaultPrevented) {\n      onOpenChange == null ? void 0 : onOpenChange(false);\n    }\n  };\n\n  const listboxReducer = (state, action) => {\n    const newState = defaultListboxReducer(state, action); // change selection when listbox is closed\n\n    if (action.type === ActionTypes.keyDown && !open && (action.event.key === 'ArrowUp' || action.event.key === 'ArrowDown')) {\n      return _extends({}, newState, {\n        selectedValue: newState.highlightedValue\n      });\n    }\n\n    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {\n      return _extends({}, newState, {\n        highlightedValue: newState.selectedValue\n      });\n    }\n\n    return newState;\n  };\n\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible\n  } = useButton({\n    component: buttonComponent,\n    disabled,\n    ref: handleButtonRef\n  });\n  const selectedOption = React.useMemo(() => {\n    var _props$options$find;\n\n    return props.multiple ? props.options.filter(o => value.includes(o.value)) : (_props$options$find = props.options.find(o => o.value === value)) != null ? _props$options$find : null;\n  }, [props.multiple, props.options, value]);\n  let useListboxParameters;\n\n  if (props.multiple) {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled;\n\n        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: true,\n      onChange: newOptions => {\n        setValue(newOptions.map(o => o.value));\n        onChange == null ? void 0 : onChange(newOptions.map(o => o.value));\n      },\n      options,\n      optionStringifier,\n      value: selectedOption\n    };\n  } else {\n    useListboxParameters = {\n      id: listboxId,\n      isOptionDisabled: o => {\n        var _o$disabled2;\n\n        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;\n      },\n      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),\n      listboxRef: handleListboxRef,\n      multiple: false,\n      onChange: option => {\n        var _option$value, _option$value2;\n\n        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);\n        onChange == null ? void 0 : onChange((_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);\n      },\n      options,\n      optionStringifier,\n      stateReducer: listboxReducer,\n      value: selectedOption\n    };\n  }\n\n  const {\n    getRootProps: getListboxRootProps,\n    getOptionProps: getListboxOptionProps,\n    getOptionState,\n    highlightedOption,\n    selectedOption: listboxSelectedOption\n  } = useListbox(useListboxParameters);\n\n  const getButtonProps = (otherHandlers = {}) => {\n    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {\n      onClick: createHandleButtonClick(otherHandlers),\n      onMouseDown: createHandleMouseDown(otherHandlers),\n      onKeyDown: createHandleButtonKeyDown(otherHandlers)\n    })), {\n      'aria-expanded': open,\n      'aria-haspopup': 'listbox'\n    });\n  };\n\n  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleListboxBlur(otherHandlers),\n    onKeyUp: createHandleListboxKeyUp(otherHandlers)\n  }));\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    return getListboxOptionProps(option, _extends({}, otherHandlers, {\n      onClick: createHandleListboxItemClick(otherHandlers)\n    }));\n  };\n\n  React.useDebugValue({\n    selectedOption: listboxSelectedOption,\n    open,\n    highlightedOption\n  });\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    open,\n    value\n  };\n}\n\nexport default useSelect;"]},"metadata":{},"sourceType":"module"}