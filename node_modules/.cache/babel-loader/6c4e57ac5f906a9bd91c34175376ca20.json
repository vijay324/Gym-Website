{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var invisible = ownerState.invisible;\n  var slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, undefined);\n};\n\nvar BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  var component = props.component,\n      children = props.children,\n      className = props.className,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      _props$max = props.max,\n      maxProp = _props$max === void 0 ? 99 : _props$max,\n      _props$showZero = props.showZero,\n      showZero = _props$showZero === void 0 ? false : _props$showZero,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useBadge = useBadge(_extends({}, props, {\n    max: maxProp\n  })),\n      badgeContent = _useBadge.badgeContent,\n      max = _useBadge.max,\n      displayValue = _useBadge.displayValue,\n      invisible = _useBadge.invisible;\n\n  var ownerState = _extends({}, props, {\n    badgeContent: badgeContent,\n    invisible: invisible,\n    max: max,\n    showZero: showZero\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var Root = component || components.Root || 'span';\n  var rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  var Badge = components.Badge || 'span';\n  var badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","composeClasses","appendOwnerState","useBadge","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","undefined","BadgeUnstyled","forwardRef","props","ref","component","children","className","components","componentsProps","max","maxProp","showZero","other","badgeContent","displayValue","classes","Root","rootProps","Badge","badgeProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","number"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;"]},"metadata":{},"sourceType":"module"}