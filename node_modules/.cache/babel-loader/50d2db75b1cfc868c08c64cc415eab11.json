{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\S.Vijay Kumar\\\\Downloads\\\\project_fitness_app-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from'react';import Pagination from'@mui/material/Pagination';import{Box,Stack,Typography}from'@mui/material';import{exerciseOptions,fetchData}from'../utils/fetchData';import ExerciseCard from'./ExerciseCard';import Loader from'./Loader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Exercises=function Exercises(_ref){var exercises=_ref.exercises,setExercises=_ref.setExercises,bodyPart=_ref.bodyPart;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(6),_useState4=_slicedToArray(_useState3,1),exercisesPerPage=_useState4[0];useEffect(function(){var fetchExercisesData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var exercisesData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:exercisesData=[];if(!(bodyPart==='all')){_context.next=7;break;}_context.next=4;return fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);case 4:exercisesData=_context.sent;_context.next=10;break;case 7:_context.next=9;return fetchData(\"https://exercisedb.p.rapidapi.com/exercises/bodyPart/\".concat(bodyPart),exerciseOptions);case 9:exercisesData=_context.sent;case 10:setExercises(exercisesData);case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchExercisesData(){return _ref2.apply(this,arguments);};}();fetchExercisesData();},[bodyPart]);// Pagination\nvar indexOfLastExercise=currentPage*exercisesPerPage;var indexOfFirstExercise=indexOfLastExercise-exercisesPerPage;var currentExercises=exercises.slice(indexOfFirstExercise,indexOfLastExercise);var paginate=function paginate(event,value){setCurrentPage(value);window.scrollTo({top:1800,behavior:'smooth'});};if(!currentExercises.length)return/*#__PURE__*/_jsx(Loader,{});return/*#__PURE__*/_jsxs(Box,{id:\"exercises\",sx:{mt:{lg:'109px'}},mt:\"50px\",p:\"20px\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",fontWeight:\"bold\",sx:{fontSize:{lg:'44px',xs:'30px'}},mb:\"46px\",children:\"Showing Results\"}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",sx:{gap:{lg:'107px',xs:'50px'}},flexWrap:\"wrap\",justifyContent:\"center\",children:currentExercises.map(function(exercise,idx){return/*#__PURE__*/_jsx(ExerciseCard,{exercise:exercise},idx);})}),/*#__PURE__*/_jsx(Stack,{sx:{mt:{lg:'114px',xs:'70px'}},alignItems:\"center\",children:exercises.length>9&&/*#__PURE__*/_jsx(Pagination,{color:\"standard\",shape:\"rounded\",defaultPage:1,count:Math.ceil(exercises.length/exercisesPerPage),page:currentPage,onChange:paginate,size:\"large\"})})]});};export default Exercises;","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/src/components/Exercises.js"],"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Loader","Exercises","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","fetchExercisesData","exercisesData","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","event","value","window","scrollTo","top","behavior","length","mt","lg","fontSize","xs","gap","map","exercise","idx","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\n\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport Loader from './Loader';\n\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(6);\n\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n\n      setExercises(exercisesData);\n    };\n\n    fetchExercisesData();\n  }, [bodyPart]);\n\n  // Pagination\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n\n    window.scrollTo({ top: 1800, behavior: 'smooth' });\n  };\n\n  if (!currentExercises.length) return <Loader />;\n\n  return (\n    <Box id=\"exercises\" sx={{ mt: { lg: '109px' } }} mt=\"50px\" p=\"20px\">\n      <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb=\"46px\">Showing Results</Typography>\n      <Stack direction=\"row\" sx={{ gap: { lg: '107px', xs: '50px' } }} flexWrap=\"wrap\" justifyContent=\"center\">\n        {currentExercises.map((exercise, idx) => (\n          <ExerciseCard key={idx} exercise={exercise} />\n        ))}\n      </Stack>\n      <Stack sx={{ mt: { lg: '114px', xs: '70px' } }} alignItems=\"center\">\n        {exercises.length > 9 && (\n          <Pagination\n            color=\"standard\"\n            shape=\"rounded\"\n            defaultPage={1}\n            count={Math.ceil(exercises.length / exercisesPerPage)}\n            page={currentPage}\n            onChange={paginate}\n            size=\"large\"\n          />\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Exercises;\n\n"]},"metadata":{},"sourceType":"module"}