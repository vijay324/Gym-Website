{"ast":null,"code":"import _slicedToArray from \"C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport { useButton } from '../ButtonUnstyled';\nexport default function useMenuItem(props) {\n  var component = props.component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      ref = props.ref,\n      label = props.label;\n  var id = useId();\n  var menuContext = React.useContext(MenuUnstyledContext);\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  var registerItem = menuContext.registerItem,\n      unregisterItem = menuContext.unregisterItem,\n      open = menuContext.open;\n  React.useEffect(function () {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled: disabled,\n      id: id,\n      ref: itemRef,\n      label: label\n    });\n    return function () {\n      return unregisterItem(id);\n    };\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n\n  var _useButton = useButton({\n    component: component,\n    disabled: disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible; // Ensure the menu item is focused when highlighted\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusRequested = _React$useState2[0],\n      requestFocus = _React$useState2[1];\n\n  var focusIfRequested = React.useCallback(function () {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(function () {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id: id,\n    disabled: disabled,\n    label: label\n  });\n  var itemState = menuContext.getItemState(id != null ? id : '');\n\n  var _ref = itemState != null ? itemState : {\n    highlighted: false\n  },\n      highlighted = _ref.highlighted;\n\n  React.useEffect(function () {\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: function getRootProps(other) {\n        return _extends({}, other, getButtonProps(other), {\n          role: 'menuitem'\n        });\n      },\n      itemState: null,\n      focusVisible: focusVisible\n    };\n  }\n\n  return {\n    getRootProps: function getRootProps(other) {\n      var optionProps = menuContext.getItemProps(id, other);\n      return _extends({}, other, getButtonProps(other), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    itemState: itemState,\n    focusVisible: focusVisible\n  };\n}","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@mui/base/MenuItemUnstyled/useMenuItem.js"],"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuUnstyledContext","useButton","useMenuItem","props","component","disabled","ref","label","id","menuContext","useContext","itemRef","useRef","handleRef","Error","registerItem","unregisterItem","open","useEffect","undefined","focusableWhenDisabled","getButtonProps","getRootProps","focusVisible","useState","focusRequested","requestFocus","focusIfRequested","useCallback","current","focus","useDebugValue","itemState","getItemState","highlighted","other","role","optionProps","getItemProps","tabIndex"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport { useButton } from '../ButtonUnstyled';\nexport default function useMenuItem(props) {\n  const {\n    component,\n    disabled = false,\n    ref,\n    label\n  } = props;\n  const id = useId();\n  const menuContext = React.useContext(MenuUnstyledContext);\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  const {\n    registerItem,\n    unregisterItem,\n    open\n  } = menuContext;\n  React.useEffect(() => {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled,\n      id,\n      ref: itemRef,\n      label\n    });\n    return () => unregisterItem(id);\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible\n  } = useButton({\n    component,\n    disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  }); // Ensure the menu item is focused when highlighted\n\n  const [focusRequested, requestFocus] = React.useState(false);\n  const focusIfRequested = React.useCallback(() => {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(() => {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id,\n    disabled,\n    label\n  });\n  const itemState = menuContext.getItemState(id != null ? id : '');\n  const {\n    highlighted\n  } = itemState != null ? itemState : {\n    highlighted: false\n  };\n  React.useEffect(() => {\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: other => _extends({}, other, getButtonProps(other), {\n        role: 'menuitem'\n      }),\n      itemState: null,\n      focusVisible\n    };\n  }\n\n  return {\n    getRootProps: other => {\n      const optionProps = menuContext.getItemProps(id, other);\n      return _extends({}, other, getButtonProps(other), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    itemState,\n    focusVisible\n  };\n}"]},"metadata":{},"sourceType":"module"}