{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst extendUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  return {\n    root: clsx(classes.root, 'root'),\n    badge: clsx(classes.badge, getBadgeUtilityClass('badge'), getBadgeUtilityClass(variant), `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, getBadgeUtilityClass(`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`), getBadgeUtilityClass(`overlap${capitalize(overlap)}`), color !== 'default' && [getBadgeUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`]], invisible && getBadgeUtilityClass('invisible'))\n  };\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.variant === 'dot' && {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }, ownerState.invisible && {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  });\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/@mui/material/Badge/Badge.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","usePreviousProps","BadgeUnstyled","styled","useThemeProps","shouldSpreadAdditionalProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","RADIUS_STANDARD","RADIUS_DOT","extendUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","anchorOriginProp","className","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","badgeContent","badgeContentProp","showZero","variantProp","other","prevProps","displayValue","Number","Root","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","children","object","string","oneOfType","elementType","bool","number","sx","arrayOf","func"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst extendUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  return {\n    root: clsx(classes.root, 'root'),\n    badge: clsx(classes.badge, getBadgeUtilityClass('badge'), getBadgeUtilityClass(variant), `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, getBadgeUtilityClass(`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`), getBadgeUtilityClass(`overlap${capitalize(overlap)}`), color !== 'default' && [getBadgeUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`]], invisible && getBadgeUtilityClass('invisible'))\n  };\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: theme.palette[ownerState.color].main,\n  color: theme.palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}