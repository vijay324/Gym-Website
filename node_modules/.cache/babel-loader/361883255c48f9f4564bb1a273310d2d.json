{"ast":null,"code":"var toArray = function toArray(arg) {\n  return Array.isArray(arg) ? arg : [arg];\n};\n\nvar clamp = function clamp(number, min, max) {\n  if (number < min) return min;\n  if (number > max) return max;\n  return number;\n};\n/**\n * Returns `props.theme.palette[key || props.palette][tone || props.tone || 0]` or `defaultValue`.\n * @example\n * import styled, { ThemeProvider } from \"styled-components\";\n * import { palette } from \"styled-tools\";\n *\n * const theme = {\n *   palette: {\n *     primary: ['#1976d2', '#2196f3', '#71bcf7', '#c2e2fb'],\n *     secondary: ['#c2185b', '#e91e63', '#f06292', '#f8bbd0']\n *   }\n * };\n *\n * const Button = styled.button`\n *   color: ${palette(1)};                    // props.theme.palette[props.palette][1]\n *   color: ${palette(\"primary\", 1)};         // props.theme.palette.primary[1]\n *   color: ${palette(\"primary\")};            // props.theme.palette.primary[props.tone || 0]\n *   color: ${palette(\"primary\", -1)};        // props.theme.palette.primary[3]\n *   color: ${palette(\"primary\", 10)};        // props.theme.palette.primary[3]\n *   color: ${palette(\"primary\", -10)};       // props.theme.palette.primary[0]\n *   color: ${palette(\"primary\", 0, \"red\")};  // props.theme.palette.primary[0] || red\n * `;\n *\n * <ThemeProvider theme={theme}>\n *   <Button palette=\"secondary\" />\n * </ThemeProvider>\n */\n\n\nvar palette = function palette(keyOrTone, toneOrDefaultValue, defaultValue) {\n  return function (props) {\n    var key = typeof keyOrTone === \"string\" ? keyOrTone : props.palette;\n    var tone = typeof keyOrTone === \"number\" ? keyOrTone : typeof toneOrDefaultValue === \"number\" ? toneOrDefaultValue : props.tone || 0;\n    var finalDefaultValue = toneOrDefaultValue !== tone ? toneOrDefaultValue : defaultValue;\n\n    if (!props.theme.palette || !props.theme.palette[key]) {\n      return finalDefaultValue;\n    }\n\n    var tones = toArray(props.theme.palette[key]);\n\n    if (tone < 0) {\n      return tones[clamp(tones.length + tone, 0, tones.length - 1)];\n    }\n\n    return tones[clamp(tone, 0, tones.length - 1)];\n  };\n};\n\nexport default palette;","map":{"version":3,"sources":["C:/Users/S.Vijay Kumar/Downloads/project_fitness_app-main/node_modules/styled-tools/dist/es/palette.js"],"names":["toArray","arg","Array","isArray","clamp","number","min","max","palette","keyOrTone","toneOrDefaultValue","defaultValue","props","key","tone","finalDefaultValue","theme","tones","length"],"mappings":"AAAA,IAAIA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAClC,SAAOC,KAAK,CAACC,OAAN,CAAcF,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAlC;AACD,CAFD;;AAIA,IAAIG,KAAK,GAAG,SAASA,KAAT,CAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC3C,MAAIF,MAAM,GAAGC,GAAb,EAAkB,OAAOA,GAAP;AAClB,MAAID,MAAM,GAAGE,GAAb,EAAkB,OAAOA,GAAP;AAClB,SAAOF,MAAP;AACD,CAJD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBC,SAAjB,EAA4BC,kBAA5B,EAAgDC,YAAhD,EAA8D;AAC1E,SAAO,UAAUC,KAAV,EAAiB;AACtB,QAAIC,GAAG,GAAG,OAAOJ,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CG,KAAK,CAACJ,OAA5D;AACA,QAAIM,IAAI,GAAG,OAAOL,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4C,OAAOC,kBAAP,KAA8B,QAA9B,GAAyCA,kBAAzC,GAA8DE,KAAK,CAACE,IAAN,IAAc,CAAnI;AACA,QAAIC,iBAAiB,GAAGL,kBAAkB,KAAKI,IAAvB,GAA8BJ,kBAA9B,GAAmDC,YAA3E;;AAEA,QAAI,CAACC,KAAK,CAACI,KAAN,CAAYR,OAAb,IAAwB,CAACI,KAAK,CAACI,KAAN,CAAYR,OAAZ,CAAoBK,GAApB,CAA7B,EAAuD;AACrD,aAAOE,iBAAP;AACD;;AAED,QAAIE,KAAK,GAAGjB,OAAO,CAACY,KAAK,CAACI,KAAN,CAAYR,OAAZ,CAAoBK,GAApB,CAAD,CAAnB;;AAEA,QAAIC,IAAI,GAAG,CAAX,EAAc;AACZ,aAAOG,KAAK,CAACb,KAAK,CAACa,KAAK,CAACC,MAAN,GAAeJ,IAAhB,EAAsB,CAAtB,EAAyBG,KAAK,CAACC,MAAN,GAAe,CAAxC,CAAN,CAAZ;AACD;;AAED,WAAOD,KAAK,CAACb,KAAK,CAACU,IAAD,EAAO,CAAP,EAAUG,KAAK,CAACC,MAAN,GAAe,CAAzB,CAAN,CAAZ;AACD,GAhBD;AAiBD,CAlBD;;AAoBA,eAAeV,OAAf","sourcesContent":["var toArray = function toArray(arg) {\n  return Array.isArray(arg) ? arg : [arg];\n};\n\nvar clamp = function clamp(number, min, max) {\n  if (number < min) return min;\n  if (number > max) return max;\n  return number;\n};\n/**\n * Returns `props.theme.palette[key || props.palette][tone || props.tone || 0]` or `defaultValue`.\n * @example\n * import styled, { ThemeProvider } from \"styled-components\";\n * import { palette } from \"styled-tools\";\n *\n * const theme = {\n *   palette: {\n *     primary: ['#1976d2', '#2196f3', '#71bcf7', '#c2e2fb'],\n *     secondary: ['#c2185b', '#e91e63', '#f06292', '#f8bbd0']\n *   }\n * };\n *\n * const Button = styled.button`\n *   color: ${palette(1)};                    // props.theme.palette[props.palette][1]\n *   color: ${palette(\"primary\", 1)};         // props.theme.palette.primary[1]\n *   color: ${palette(\"primary\")};            // props.theme.palette.primary[props.tone || 0]\n *   color: ${palette(\"primary\", -1)};        // props.theme.palette.primary[3]\n *   color: ${palette(\"primary\", 10)};        // props.theme.palette.primary[3]\n *   color: ${palette(\"primary\", -10)};       // props.theme.palette.primary[0]\n *   color: ${palette(\"primary\", 0, \"red\")};  // props.theme.palette.primary[0] || red\n * `;\n *\n * <ThemeProvider theme={theme}>\n *   <Button palette=\"secondary\" />\n * </ThemeProvider>\n */\n\n\nvar palette = function palette(keyOrTone, toneOrDefaultValue, defaultValue) {\n  return function (props) {\n    var key = typeof keyOrTone === \"string\" ? keyOrTone : props.palette;\n    var tone = typeof keyOrTone === \"number\" ? keyOrTone : typeof toneOrDefaultValue === \"number\" ? toneOrDefaultValue : props.tone || 0;\n    var finalDefaultValue = toneOrDefaultValue !== tone ? toneOrDefaultValue : defaultValue;\n\n    if (!props.theme.palette || !props.theme.palette[key]) {\n      return finalDefaultValue;\n    }\n\n    var tones = toArray(props.theme.palette[key]);\n\n    if (tone < 0) {\n      return tones[clamp(tones.length + tone, 0, tones.length - 1)];\n    }\n\n    return tones[clamp(tone, 0, tones.length - 1)];\n  };\n};\n\nexport default palette;"]},"metadata":{},"sourceType":"module"}